; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; Added this here to "hard code" the environment for macro debugging/visuals/build (this needs to be commented out before merge for actions to work)
; default_envs = lcd_ssd1306
; default_envs = d32_pro_tft
; default_envs = tft_espi

[common]
platform = espressif32
framework = arduino
board_build.partitions = 4mb_inc_ota.csv
upload_speed = 460800
monitor_speed = 115200
monitor_filters = 
    esp32_exception_decoder
monitor_dtr = 1
monitor_rts = 1

build_flags =                           ; Do not use spaces around the "=" here, will give you a builder not found error
    !python tools/git_rev.py            ; Pick up git information for version (disabled), branch, and commit (in version.cpp)
    -D PIO_SRC_TAG=1.2.1                ; Increment versions shown in about.htm page (from version.cpp)
    ; Async TCP Settings:
    -D CONFIG_ASYNC_TCP_RUNNING_CORE=1  ; per: https://github.com/me-no-dev/ESPAsyncWebServer/issues/731#issuecomment-628163515
    -D CONFIG_ASYNC_TCP_USE_WDT=1
    ; BLE Settings:
    -D CONFIG_ESP32_WIFI_SW_COEXIST_ENABLE=1
    ;-D CONFIG_SW_COEXIST_PREFERENCE_BALANCED=1
    -D CONFIG_BT_NIMBLE_ROLE_PERIPHERAL_DISABLED=1   ; Disable NimBLE Server
    -D CONFIG_BT_NIMBLE_ROLE_BROADCASTER_DISABLED=1  ; Disable NimBLE Broadcaster
    ; Debug logging
    -D PRINT_GRAV_UPDATES=0             ; Turn on and off gravity printing to serial log
    -D CORE_DEBUG_LEVEL=0               ; Set core Arduino log level (5 = high)
    -D ARDUINO_LOG_LEVEL=0              ; Set Serial log level (6 = high)
    -D CONFIG_NIMBLE_CPP_LOG_LEVEL=0    ; Set NimBLE log level (4 = high)
    ;-D PARSE_DEBUG                     ; Turn main Parse debug logging on
    ;-D PARSE_DEBUG_RESPONSE            ; Turn Parse response debugging on
    -D DISABLE_LOGGING                ; This will remove log lib from sketch
    ; Project conditional compile/options:
    -D BAUD=${common.monitor_speed}     ; Serial monitor baud setting
    -D FILESYSTEM=SPIFFS                ; Define filesystem in use
    -D DISABLE_OTA_UPDATES=1
    ;-D DOTELNET=1                       ; Allow Telnet serial logging
    ;-D TELNETPORT=23
    -D WEBPORT=80
    ;-D FSEDIT=1                         ; Use a filesystem editor
extra_scripts = tools/get_port.py       ; Pick up port information based on OS
lib_deps =
    bblanchon/ArduinoJson @ 6.21.5  ; https://github.com/bblanchon/ArduinoJson
    ; thijse/ArduinoLog @ 1.1.1 ; https://github.com/thijse/Arduino-Log.git
    https://github.com/thorrak/Arduino-Log.git ; // Need this until ArduinoLog merges https://github.com/thijse/Arduino-Log/pull/23 
    https://github.com/lbussy/esptelnet.git
    https://github.com/me-no-dev/ESPAsyncWebServer.git
    https://github.com/thorrak/WiFiManager.git#feature_asyncwebserver
    h2zero/NimBLE-Arduino @ 1.4.1  ; https://github.com/h2zero/NimBLE-Arduino
    256dpi/MQTT @ 2.5.1 ; https://github.com/256dpi/arduino-mqtt
    lbussy/LCBUrl @ ^1.1.9
    https://github.com/lbussy/Parse-SDK-Arduino.git#fix_warnings
espi_lib_deps = 
    bodmer/TFT_eSPI @ 2.4.79 ; https://github.com/Bodmer/TFT_eSPI.git
build_type = release ; debug

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Individual build configurations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:lcd_ssd1306]   ; Small OLED Board
board = lolin_d32
platform = ${common.platform}
framework = ${common.framework}
board_build.partitions = ${common.board_build.partitions}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}
build_flags = 
    ${common.build_flags}
    -DLCD_SSD1306
    -DDISABLE_OTA_UPDATES
lib_deps = 
    ${common.lib_deps}
    https://github.com/ThingPulse/esp8266-oled-ssd1306.git#4.3.0
build_type = ${common.build_type}


[env:d32_pro_tft]   ; Lolin ESP32 + ILI TFT
board = lolin_d32_pro
platform = ${common.platform}
framework = ${common.framework}
board_build.partitions = 4mb_no_ota.csv
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}

build_flags = 
    ${common.build_flags}
    -D LCD_TFT=1
    -D USER_SETUP_LOADED=1
    -D ILI9341_DRIVER=1
    -D TFT_WIDTH=240
    -D TFT_HEIGHT=320
    -D CGRAM_OFFSET=1
    -D TFT_BL=32
    -D SMOOTH_FONT=1
    -D TFT_BACKLIGHT_ON=1
    -D LOAD_GFXFF=1
    -D TOUCH_CS=12
lib_deps = 
    ${common.lib_deps}
    ${common.espi_lib_deps}
build_type = ${common.build_type}


[env:tft_espi]  ; TTGO TFT (USB-C) Board
; This is configured for a TTGO T-Display using the tft_espi drivers
; it should work for other tft_espi compatible displays, if you tweak
; the defines appropriately. See the documentation for TFT_eSPI at
; https://github.com/Bodmer/TFT_eSPI
board = esp32dev
platform = ${common.platform}
framework = ${common.framework}
board_build.partitions = ${common.board_build.partitions}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}
build_flags = 
    ${common.build_flags}
    -DLCD_TFT_ESPI=1
    -DDISABLE_OTA_UPDATES=1
    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DTFT_WIDTH=135
    -DTFT_HEIGHT=240
    -DCGRAM_OFFSET=1
    -DTFT_MISO=-1
    -DTFT_MOSI=19
    -DTFT_SCLK=18
    -DTFT_CS=5
    -DTFT_DC=16
    -DTFT_RST=23
    -DTFT_BL=4
    -DLOAD_GFXFF=1
lib_deps = 
    ${common.lib_deps}
    ${common.espi_lib_deps}
build_type = ${common.build_type}

[env:m5stickc_plus]
board = esp32dev
platform = ${common.platform}
framework = ${common.framework}
board_build.partitions = ${common.board_build.partitions}
upload_speed = 1500000
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}
build_flags = 
    ${common.build_flags}
    -DLCD_TFT_M5STICKC=1
    -DLCD_TFT_ESPI=1
    -DDISABLE_OTA_UPDATES
    -DBUTTON_INVERT
    -DLCD_TFT_ESPI=1
    -DAXP192=1
    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DTFT_WIDTH=135
    -DTFT_HEIGHT=240
    -DCGRAM_OFFSET=1
    -DTFT_MISO=-1
    -DTFT_MOSI=15
    -DTFT_SCLK=13
    -DTFT_CS=5
    -DTFT_DC=23
    -DTFT_RST=18
    -DLOAD_GFXFF=1
    -DWIFI_RESET_BUTTON_GPIO=37
    -DDISABLE_OTA_UPDATES
lib_deps = 
    ${common.lib_deps}
    ${common.espi_lib_deps}
    tanakamasayuki/I2C AXP192 Power management@^1.0.4
build_type = ${common.build_type}
check_skip_packages = yes
